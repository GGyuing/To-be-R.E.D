package VampireTree;

import java.io.*;
import java.util.StringTokenizer;

public class VampireTree {
	public static void main(String[] args) throws IOException{
		FileReader in=null;
		BufferedReader reader=null;
		try{
			in=new FileReader("vampire.txt");
			reader=new BufferedReader(in);
			
			String str="";
			while((str=reader.readLine())!=null)
			{
				int[] vamp=new int[20];
				int count=0; //저장된 개체수를 저장
				StringTokenizer token=new StringTokenizer(str, ",{} ");
				while(token.hasMoreTokens())
				{
					vamp[count++]=Integer.parseInt(token.nextToken());
				}
				System.out.println(maxDistance(vamp,count));;								
			}
		}catch(FileNotFoundException e)
		{
			e.getMessage();
		}finally{
			in.close();
			reader.close();
		}
	}
	
	public int maxDistance(int[] num)
		{
		    int i,One_Cnt=0,Else_Cnt=0,sum=2;
		    for(i=0;i<num.length;i++)
		    {
		        if(num[i]==1)
		            One_Cnt++;
		        else
		        {
		            Else_Cnt++;
		            sum+=num[i]-2;
		        }
	    }
	    if(One_Cnt!=sum)
	        return -1;
	    else
	        return Else_Cnt+1;
	}
		
}
